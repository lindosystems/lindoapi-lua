MODEL:
SETS:
	cell /1..127/:
		valasg;
	valset /1..127/;
	cxv(cell,valset): z;
ENDSETS
! Variables: z(i,j) = 1 if cell i is assigned value j;
! Each value is assigned once;
@FOR(valset(j): @SUM(cell(i): z(i,j)) = 1;);
! Each cell gets a value;
@FOR(cell(i): @SUM(valset(j): z(i,j)) = 1; valasg(i) = @SUM(valset(j): (KOFF+j)*z(i,j)););
! Binary constraints;
@FOR(cxv(i,j): @BIN(z(i,j)));
! Optional symmetry-breaking driver;
min= @sum( valset(j): j*z(KIDX,j));
! There is lots of symmetry. Choose one of the solutions;
! There are 6xN rotations and 3 reflections;
! To eliminate rotations, take cell(i), enumerate all positions in each rotation and add a constraint to use only one;
CALC:
	KIDX = 6;
	KSUM = 625; !Comment out to make KSUM the variable to use in place off 'magic_sum(N);
	KOFF = 0; !Comment out to make KOFF the variable to offset for the values assigned in the hexagon, 
                       Positive KOFF shifts values assigned from 1..(3N^2-3N+1) to (1+KOFF)..(3N^2-3N+1+KOFF)
                       If it is a variable (i.e. commented out from CALC), it should better be @free;
	!@SET('XSOLVR',14,0); !Remove comment to use external solver '14';
	@SET('SOLVLG', 2);
	!@SET('GLOBAL', 1); !Remove comment to activate global solver if KOFF is a variable;
ENDCALC
[HRZ1] @SUM(valset(j): (j+KOFF)*z(1,j)) + @SUM(valset(j): (j+KOFF)*z(2,j)) + @SUM(valset(j): (j+KOFF)*z(3,j)) + @SUM(valset(j): (j+KOFF)*z(4,j)) + @SUM(valset(j): (j+KOFF)*z(5,j)) + @SUM(valset(j): (j+KOFF)*z(6,j)) + @SUM(valset(j): (j+KOFF)*z(7,j)) = KSUM;
[HRZ2] @SUM(valset(j): (j+KOFF)*z(8,j)) + @SUM(valset(j): (j+KOFF)*z(9,j)) + @SUM(valset(j): (j+KOFF)*z(10,j)) + @SUM(valset(j): (j+KOFF)*z(11,j)) + @SUM(valset(j): (j+KOFF)*z(12,j)) + @SUM(valset(j): (j+KOFF)*z(13,j)) + @SUM(valset(j): (j+KOFF)*z(14,j)) + @SUM(valset(j): (j+KOFF)*z(15,j)) = KSUM;
[HRZ3] @SUM(valset(j): (j+KOFF)*z(16,j)) + @SUM(valset(j): (j+KOFF)*z(17,j)) + @SUM(valset(j): (j+KOFF)*z(18,j)) + @SUM(valset(j): (j+KOFF)*z(19,j)) + @SUM(valset(j): (j+KOFF)*z(20,j)) + @SUM(valset(j): (j+KOFF)*z(21,j)) + @SUM(valset(j): (j+KOFF)*z(22,j)) + @SUM(valset(j): (j+KOFF)*z(23,j)) + @SUM(valset(j): (j+KOFF)*z(24,j)) = KSUM;
[HRZ4] @SUM(valset(j): (j+KOFF)*z(25,j)) + @SUM(valset(j): (j+KOFF)*z(26,j)) + @SUM(valset(j): (j+KOFF)*z(27,j)) + @SUM(valset(j): (j+KOFF)*z(28,j)) + @SUM(valset(j): (j+KOFF)*z(29,j)) + @SUM(valset(j): (j+KOFF)*z(30,j)) + @SUM(valset(j): (j+KOFF)*z(31,j)) + @SUM(valset(j): (j+KOFF)*z(32,j)) + @SUM(valset(j): (j+KOFF)*z(33,j)) + @SUM(valset(j): (j+KOFF)*z(34,j)) = KSUM;
[HRZ5] @SUM(valset(j): (j+KOFF)*z(35,j)) + @SUM(valset(j): (j+KOFF)*z(36,j)) + @SUM(valset(j): (j+KOFF)*z(37,j)) + @SUM(valset(j): (j+KOFF)*z(38,j)) + @SUM(valset(j): (j+KOFF)*z(39,j)) + @SUM(valset(j): (j+KOFF)*z(40,j)) + @SUM(valset(j): (j+KOFF)*z(41,j)) + @SUM(valset(j): (j+KOFF)*z(42,j)) + @SUM(valset(j): (j+KOFF)*z(43,j)) + @SUM(valset(j): (j+KOFF)*z(44,j)) + @SUM(valset(j): (j+KOFF)*z(45,j)) = KSUM;
[HRZ6] @SUM(valset(j): (j+KOFF)*z(46,j)) + @SUM(valset(j): (j+KOFF)*z(47,j)) + @SUM(valset(j): (j+KOFF)*z(48,j)) + @SUM(valset(j): (j+KOFF)*z(49,j)) + @SUM(valset(j): (j+KOFF)*z(50,j)) + @SUM(valset(j): (j+KOFF)*z(51,j)) + @SUM(valset(j): (j+KOFF)*z(52,j)) + @SUM(valset(j): (j+KOFF)*z(53,j)) + @SUM(valset(j): (j+KOFF)*z(54,j)) + @SUM(valset(j): (j+KOFF)*z(55,j)) + @SUM(valset(j): (j+KOFF)*z(56,j)) + @SUM(valset(j): (j+KOFF)*z(57,j)) = KSUM;
[HRZ7] @SUM(valset(j): (j+KOFF)*z(58,j)) + @SUM(valset(j): (j+KOFF)*z(59,j)) + @SUM(valset(j): (j+KOFF)*z(60,j)) + @SUM(valset(j): (j+KOFF)*z(61,j)) + @SUM(valset(j): (j+KOFF)*z(62,j)) + @SUM(valset(j): (j+KOFF)*z(63,j)) + @SUM(valset(j): (j+KOFF)*z(64,j)) + @SUM(valset(j): (j+KOFF)*z(65,j)) + @SUM(valset(j): (j+KOFF)*z(66,j)) + @SUM(valset(j): (j+KOFF)*z(67,j)) + @SUM(valset(j): (j+KOFF)*z(68,j)) + @SUM(valset(j): (j+KOFF)*z(69,j)) + @SUM(valset(j): (j+KOFF)*z(70,j)) = KSUM;
[HRZ8] @SUM(valset(j): (j+KOFF)*z(71,j)) + @SUM(valset(j): (j+KOFF)*z(72,j)) + @SUM(valset(j): (j+KOFF)*z(73,j)) + @SUM(valset(j): (j+KOFF)*z(74,j)) + @SUM(valset(j): (j+KOFF)*z(75,j)) + @SUM(valset(j): (j+KOFF)*z(76,j)) + @SUM(valset(j): (j+KOFF)*z(77,j)) + @SUM(valset(j): (j+KOFF)*z(78,j)) + @SUM(valset(j): (j+KOFF)*z(79,j)) + @SUM(valset(j): (j+KOFF)*z(80,j)) + @SUM(valset(j): (j+KOFF)*z(81,j)) + @SUM(valset(j): (j+KOFF)*z(82,j)) = KSUM;
[HRZ9] @SUM(valset(j): (j+KOFF)*z(83,j)) + @SUM(valset(j): (j+KOFF)*z(84,j)) + @SUM(valset(j): (j+KOFF)*z(85,j)) + @SUM(valset(j): (j+KOFF)*z(86,j)) + @SUM(valset(j): (j+KOFF)*z(87,j)) + @SUM(valset(j): (j+KOFF)*z(88,j)) + @SUM(valset(j): (j+KOFF)*z(89,j)) + @SUM(valset(j): (j+KOFF)*z(90,j)) + @SUM(valset(j): (j+KOFF)*z(91,j)) + @SUM(valset(j): (j+KOFF)*z(92,j)) + @SUM(valset(j): (j+KOFF)*z(93,j)) = KSUM;
[HRZ10] @SUM(valset(j): (j+KOFF)*z(94,j)) + @SUM(valset(j): (j+KOFF)*z(95,j)) + @SUM(valset(j): (j+KOFF)*z(96,j)) + @SUM(valset(j): (j+KOFF)*z(97,j)) + @SUM(valset(j): (j+KOFF)*z(98,j)) + @SUM(valset(j): (j+KOFF)*z(99,j)) + @SUM(valset(j): (j+KOFF)*z(100,j)) + @SUM(valset(j): (j+KOFF)*z(101,j)) + @SUM(valset(j): (j+KOFF)*z(102,j)) + @SUM(valset(j): (j+KOFF)*z(103,j)) = KSUM;
[HRZ11] @SUM(valset(j): (j+KOFF)*z(104,j)) + @SUM(valset(j): (j+KOFF)*z(105,j)) + @SUM(valset(j): (j+KOFF)*z(106,j)) + @SUM(valset(j): (j+KOFF)*z(107,j)) + @SUM(valset(j): (j+KOFF)*z(108,j)) + @SUM(valset(j): (j+KOFF)*z(109,j)) + @SUM(valset(j): (j+KOFF)*z(110,j)) + @SUM(valset(j): (j+KOFF)*z(111,j)) + @SUM(valset(j): (j+KOFF)*z(112,j)) = KSUM;
[HRZ12] @SUM(valset(j): (j+KOFF)*z(113,j)) + @SUM(valset(j): (j+KOFF)*z(114,j)) + @SUM(valset(j): (j+KOFF)*z(115,j)) + @SUM(valset(j): (j+KOFF)*z(116,j)) + @SUM(valset(j): (j+KOFF)*z(117,j)) + @SUM(valset(j): (j+KOFF)*z(118,j)) + @SUM(valset(j): (j+KOFF)*z(119,j)) + @SUM(valset(j): (j+KOFF)*z(120,j)) = KSUM;
[HRZ13] @SUM(valset(j): (j+KOFF)*z(121,j)) + @SUM(valset(j): (j+KOFF)*z(122,j)) + @SUM(valset(j): (j+KOFF)*z(123,j)) + @SUM(valset(j): (j+KOFF)*z(124,j)) + @SUM(valset(j): (j+KOFF)*z(125,j)) + @SUM(valset(j): (j+KOFF)*z(126,j)) + @SUM(valset(j): (j+KOFF)*z(127,j)) = KSUM;
[LLR1] @SUM(valset(j): (j+KOFF)*z(58,j)) + @SUM(valset(j): (j+KOFF)*z(71,j)) + @SUM(valset(j): (j+KOFF)*z(83,j)) + @SUM(valset(j): (j+KOFF)*z(94,j)) + @SUM(valset(j): (j+KOFF)*z(104,j)) + @SUM(valset(j): (j+KOFF)*z(113,j)) + @SUM(valset(j): (j+KOFF)*z(121,j)) = KSUM;
[LLR2] @SUM(valset(j): (j+KOFF)*z(46,j)) + @SUM(valset(j): (j+KOFF)*z(59,j)) + @SUM(valset(j): (j+KOFF)*z(72,j)) + @SUM(valset(j): (j+KOFF)*z(84,j)) + @SUM(valset(j): (j+KOFF)*z(95,j)) + @SUM(valset(j): (j+KOFF)*z(105,j)) + @SUM(valset(j): (j+KOFF)*z(114,j)) + @SUM(valset(j): (j+KOFF)*z(122,j)) = KSUM;
[LLR3] @SUM(valset(j): (j+KOFF)*z(35,j)) + @SUM(valset(j): (j+KOFF)*z(47,j)) + @SUM(valset(j): (j+KOFF)*z(60,j)) + @SUM(valset(j): (j+KOFF)*z(73,j)) + @SUM(valset(j): (j+KOFF)*z(85,j)) + @SUM(valset(j): (j+KOFF)*z(96,j)) + @SUM(valset(j): (j+KOFF)*z(106,j)) + @SUM(valset(j): (j+KOFF)*z(115,j)) + @SUM(valset(j): (j+KOFF)*z(123,j)) = KSUM;
[LLR4] @SUM(valset(j): (j+KOFF)*z(25,j)) + @SUM(valset(j): (j+KOFF)*z(36,j)) + @SUM(valset(j): (j+KOFF)*z(48,j)) + @SUM(valset(j): (j+KOFF)*z(61,j)) + @SUM(valset(j): (j+KOFF)*z(74,j)) + @SUM(valset(j): (j+KOFF)*z(86,j)) + @SUM(valset(j): (j+KOFF)*z(97,j)) + @SUM(valset(j): (j+KOFF)*z(107,j)) + @SUM(valset(j): (j+KOFF)*z(116,j)) + @SUM(valset(j): (j+KOFF)*z(124,j)) = KSUM;
[LLR5] @SUM(valset(j): (j+KOFF)*z(16,j)) + @SUM(valset(j): (j+KOFF)*z(26,j)) + @SUM(valset(j): (j+KOFF)*z(37,j)) + @SUM(valset(j): (j+KOFF)*z(49,j)) + @SUM(valset(j): (j+KOFF)*z(62,j)) + @SUM(valset(j): (j+KOFF)*z(75,j)) + @SUM(valset(j): (j+KOFF)*z(87,j)) + @SUM(valset(j): (j+KOFF)*z(98,j)) + @SUM(valset(j): (j+KOFF)*z(108,j)) + @SUM(valset(j): (j+KOFF)*z(117,j)) + @SUM(valset(j): (j+KOFF)*z(125,j)) = KSUM;
[LLR6] @SUM(valset(j): (j+KOFF)*z(8,j)) + @SUM(valset(j): (j+KOFF)*z(17,j)) + @SUM(valset(j): (j+KOFF)*z(27,j)) + @SUM(valset(j): (j+KOFF)*z(38,j)) + @SUM(valset(j): (j+KOFF)*z(50,j)) + @SUM(valset(j): (j+KOFF)*z(63,j)) + @SUM(valset(j): (j+KOFF)*z(76,j)) + @SUM(valset(j): (j+KOFF)*z(88,j)) + @SUM(valset(j): (j+KOFF)*z(99,j)) + @SUM(valset(j): (j+KOFF)*z(109,j)) + @SUM(valset(j): (j+KOFF)*z(118,j)) + @SUM(valset(j): (j+KOFF)*z(126,j)) = KSUM;
[LLR7] @SUM(valset(j): (j+KOFF)*z(1,j)) + @SUM(valset(j): (j+KOFF)*z(9,j)) + @SUM(valset(j): (j+KOFF)*z(18,j)) + @SUM(valset(j): (j+KOFF)*z(28,j)) + @SUM(valset(j): (j+KOFF)*z(39,j)) + @SUM(valset(j): (j+KOFF)*z(51,j)) + @SUM(valset(j): (j+KOFF)*z(64,j)) + @SUM(valset(j): (j+KOFF)*z(77,j)) + @SUM(valset(j): (j+KOFF)*z(89,j)) + @SUM(valset(j): (j+KOFF)*z(100,j)) + @SUM(valset(j): (j+KOFF)*z(110,j)) + @SUM(valset(j): (j+KOFF)*z(119,j)) + @SUM(valset(j): (j+KOFF)*z(127,j)) = KSUM;
[LLR8] @SUM(valset(j): (j+KOFF)*z(2,j)) + @SUM(valset(j): (j+KOFF)*z(10,j)) + @SUM(valset(j): (j+KOFF)*z(19,j)) + @SUM(valset(j): (j+KOFF)*z(29,j)) + @SUM(valset(j): (j+KOFF)*z(40,j)) + @SUM(valset(j): (j+KOFF)*z(52,j)) + @SUM(valset(j): (j+KOFF)*z(65,j)) + @SUM(valset(j): (j+KOFF)*z(78,j)) + @SUM(valset(j): (j+KOFF)*z(90,j)) + @SUM(valset(j): (j+KOFF)*z(101,j)) + @SUM(valset(j): (j+KOFF)*z(111,j)) + @SUM(valset(j): (j+KOFF)*z(120,j)) = KSUM;
[LLR9] @SUM(valset(j): (j+KOFF)*z(3,j)) + @SUM(valset(j): (j+KOFF)*z(11,j)) + @SUM(valset(j): (j+KOFF)*z(20,j)) + @SUM(valset(j): (j+KOFF)*z(30,j)) + @SUM(valset(j): (j+KOFF)*z(41,j)) + @SUM(valset(j): (j+KOFF)*z(53,j)) + @SUM(valset(j): (j+KOFF)*z(66,j)) + @SUM(valset(j): (j+KOFF)*z(79,j)) + @SUM(valset(j): (j+KOFF)*z(91,j)) + @SUM(valset(j): (j+KOFF)*z(102,j)) + @SUM(valset(j): (j+KOFF)*z(112,j)) = KSUM;
[LLR10] @SUM(valset(j): (j+KOFF)*z(4,j)) + @SUM(valset(j): (j+KOFF)*z(12,j)) + @SUM(valset(j): (j+KOFF)*z(21,j)) + @SUM(valset(j): (j+KOFF)*z(31,j)) + @SUM(valset(j): (j+KOFF)*z(42,j)) + @SUM(valset(j): (j+KOFF)*z(54,j)) + @SUM(valset(j): (j+KOFF)*z(67,j)) + @SUM(valset(j): (j+KOFF)*z(80,j)) + @SUM(valset(j): (j+KOFF)*z(92,j)) + @SUM(valset(j): (j+KOFF)*z(103,j)) = KSUM;
[LLR11] @SUM(valset(j): (j+KOFF)*z(5,j)) + @SUM(valset(j): (j+KOFF)*z(13,j)) + @SUM(valset(j): (j+KOFF)*z(22,j)) + @SUM(valset(j): (j+KOFF)*z(32,j)) + @SUM(valset(j): (j+KOFF)*z(43,j)) + @SUM(valset(j): (j+KOFF)*z(55,j)) + @SUM(valset(j): (j+KOFF)*z(68,j)) + @SUM(valset(j): (j+KOFF)*z(81,j)) + @SUM(valset(j): (j+KOFF)*z(93,j)) = KSUM;
[LLR12] @SUM(valset(j): (j+KOFF)*z(6,j)) + @SUM(valset(j): (j+KOFF)*z(14,j)) + @SUM(valset(j): (j+KOFF)*z(23,j)) + @SUM(valset(j): (j+KOFF)*z(33,j)) + @SUM(valset(j): (j+KOFF)*z(44,j)) + @SUM(valset(j): (j+KOFF)*z(56,j)) + @SUM(valset(j): (j+KOFF)*z(69,j)) + @SUM(valset(j): (j+KOFF)*z(82,j)) = KSUM;
[LLR13] @SUM(valset(j): (j+KOFF)*z(7,j)) + @SUM(valset(j): (j+KOFF)*z(15,j)) + @SUM(valset(j): (j+KOFF)*z(24,j)) + @SUM(valset(j): (j+KOFF)*z(34,j)) + @SUM(valset(j): (j+KOFF)*z(45,j)) + @SUM(valset(j): (j+KOFF)*z(57,j)) + @SUM(valset(j): (j+KOFF)*z(70,j)) = KSUM;
[ULR1] @SUM(valset(j): (j+KOFF)*z(1,j)) + @SUM(valset(j): (j+KOFF)*z(8,j)) + @SUM(valset(j): (j+KOFF)*z(16,j)) + @SUM(valset(j): (j+KOFF)*z(25,j)) + @SUM(valset(j): (j+KOFF)*z(35,j)) + @SUM(valset(j): (j+KOFF)*z(46,j)) + @SUM(valset(j): (j+KOFF)*z(58,j)) = KSUM;
[ULR2] @SUM(valset(j): (j+KOFF)*z(2,j)) + @SUM(valset(j): (j+KOFF)*z(9,j)) + @SUM(valset(j): (j+KOFF)*z(17,j)) + @SUM(valset(j): (j+KOFF)*z(26,j)) + @SUM(valset(j): (j+KOFF)*z(36,j)) + @SUM(valset(j): (j+KOFF)*z(47,j)) + @SUM(valset(j): (j+KOFF)*z(59,j)) + @SUM(valset(j): (j+KOFF)*z(71,j)) = KSUM;
[ULR3] @SUM(valset(j): (j+KOFF)*z(3,j)) + @SUM(valset(j): (j+KOFF)*z(10,j)) + @SUM(valset(j): (j+KOFF)*z(18,j)) + @SUM(valset(j): (j+KOFF)*z(27,j)) + @SUM(valset(j): (j+KOFF)*z(37,j)) + @SUM(valset(j): (j+KOFF)*z(48,j)) + @SUM(valset(j): (j+KOFF)*z(60,j)) + @SUM(valset(j): (j+KOFF)*z(72,j)) + @SUM(valset(j): (j+KOFF)*z(83,j)) = KSUM;
[ULR4] @SUM(valset(j): (j+KOFF)*z(4,j)) + @SUM(valset(j): (j+KOFF)*z(11,j)) + @SUM(valset(j): (j+KOFF)*z(19,j)) + @SUM(valset(j): (j+KOFF)*z(28,j)) + @SUM(valset(j): (j+KOFF)*z(38,j)) + @SUM(valset(j): (j+KOFF)*z(49,j)) + @SUM(valset(j): (j+KOFF)*z(61,j)) + @SUM(valset(j): (j+KOFF)*z(73,j)) + @SUM(valset(j): (j+KOFF)*z(84,j)) + @SUM(valset(j): (j+KOFF)*z(94,j)) = KSUM;
[ULR5] @SUM(valset(j): (j+KOFF)*z(5,j)) + @SUM(valset(j): (j+KOFF)*z(12,j)) + @SUM(valset(j): (j+KOFF)*z(20,j)) + @SUM(valset(j): (j+KOFF)*z(29,j)) + @SUM(valset(j): (j+KOFF)*z(39,j)) + @SUM(valset(j): (j+KOFF)*z(50,j)) + @SUM(valset(j): (j+KOFF)*z(62,j)) + @SUM(valset(j): (j+KOFF)*z(74,j)) + @SUM(valset(j): (j+KOFF)*z(85,j)) + @SUM(valset(j): (j+KOFF)*z(95,j)) + @SUM(valset(j): (j+KOFF)*z(104,j)) = KSUM;
[ULR6] @SUM(valset(j): (j+KOFF)*z(6,j)) + @SUM(valset(j): (j+KOFF)*z(13,j)) + @SUM(valset(j): (j+KOFF)*z(21,j)) + @SUM(valset(j): (j+KOFF)*z(30,j)) + @SUM(valset(j): (j+KOFF)*z(40,j)) + @SUM(valset(j): (j+KOFF)*z(51,j)) + @SUM(valset(j): (j+KOFF)*z(63,j)) + @SUM(valset(j): (j+KOFF)*z(75,j)) + @SUM(valset(j): (j+KOFF)*z(86,j)) + @SUM(valset(j): (j+KOFF)*z(96,j)) + @SUM(valset(j): (j+KOFF)*z(105,j)) + @SUM(valset(j): (j+KOFF)*z(113,j)) = KSUM;
[ULR7] @SUM(valset(j): (j+KOFF)*z(7,j)) + @SUM(valset(j): (j+KOFF)*z(14,j)) + @SUM(valset(j): (j+KOFF)*z(22,j)) + @SUM(valset(j): (j+KOFF)*z(31,j)) + @SUM(valset(j): (j+KOFF)*z(41,j)) + @SUM(valset(j): (j+KOFF)*z(52,j)) + @SUM(valset(j): (j+KOFF)*z(64,j)) + @SUM(valset(j): (j+KOFF)*z(76,j)) + @SUM(valset(j): (j+KOFF)*z(87,j)) + @SUM(valset(j): (j+KOFF)*z(97,j)) + @SUM(valset(j): (j+KOFF)*z(106,j)) + @SUM(valset(j): (j+KOFF)*z(114,j)) + @SUM(valset(j): (j+KOFF)*z(121,j)) = KSUM;
[ULR8] @SUM(valset(j): (j+KOFF)*z(15,j)) + @SUM(valset(j): (j+KOFF)*z(23,j)) + @SUM(valset(j): (j+KOFF)*z(32,j)) + @SUM(valset(j): (j+KOFF)*z(42,j)) + @SUM(valset(j): (j+KOFF)*z(53,j)) + @SUM(valset(j): (j+KOFF)*z(65,j)) + @SUM(valset(j): (j+KOFF)*z(77,j)) + @SUM(valset(j): (j+KOFF)*z(88,j)) + @SUM(valset(j): (j+KOFF)*z(98,j)) + @SUM(valset(j): (j+KOFF)*z(107,j)) + @SUM(valset(j): (j+KOFF)*z(115,j)) + @SUM(valset(j): (j+KOFF)*z(122,j)) = KSUM;
[ULR9] @SUM(valset(j): (j+KOFF)*z(24,j)) + @SUM(valset(j): (j+KOFF)*z(33,j)) + @SUM(valset(j): (j+KOFF)*z(43,j)) + @SUM(valset(j): (j+KOFF)*z(54,j)) + @SUM(valset(j): (j+KOFF)*z(66,j)) + @SUM(valset(j): (j+KOFF)*z(78,j)) + @SUM(valset(j): (j+KOFF)*z(89,j)) + @SUM(valset(j): (j+KOFF)*z(99,j)) + @SUM(valset(j): (j+KOFF)*z(108,j)) + @SUM(valset(j): (j+KOFF)*z(116,j)) + @SUM(valset(j): (j+KOFF)*z(123,j)) = KSUM;
[ULR10] @SUM(valset(j): (j+KOFF)*z(34,j)) + @SUM(valset(j): (j+KOFF)*z(44,j)) + @SUM(valset(j): (j+KOFF)*z(55,j)) + @SUM(valset(j): (j+KOFF)*z(67,j)) + @SUM(valset(j): (j+KOFF)*z(79,j)) + @SUM(valset(j): (j+KOFF)*z(90,j)) + @SUM(valset(j): (j+KOFF)*z(100,j)) + @SUM(valset(j): (j+KOFF)*z(109,j)) + @SUM(valset(j): (j+KOFF)*z(117,j)) + @SUM(valset(j): (j+KOFF)*z(124,j)) = KSUM;
[ULR11] @SUM(valset(j): (j+KOFF)*z(45,j)) + @SUM(valset(j): (j+KOFF)*z(56,j)) + @SUM(valset(j): (j+KOFF)*z(68,j)) + @SUM(valset(j): (j+KOFF)*z(80,j)) + @SUM(valset(j): (j+KOFF)*z(91,j)) + @SUM(valset(j): (j+KOFF)*z(101,j)) + @SUM(valset(j): (j+KOFF)*z(110,j)) + @SUM(valset(j): (j+KOFF)*z(118,j)) + @SUM(valset(j): (j+KOFF)*z(125,j)) = KSUM;
[ULR12] @SUM(valset(j): (j+KOFF)*z(57,j)) + @SUM(valset(j): (j+KOFF)*z(69,j)) + @SUM(valset(j): (j+KOFF)*z(81,j)) + @SUM(valset(j): (j+KOFF)*z(92,j)) + @SUM(valset(j): (j+KOFF)*z(102,j)) + @SUM(valset(j): (j+KOFF)*z(111,j)) + @SUM(valset(j): (j+KOFF)*z(119,j)) + @SUM(valset(j): (j+KOFF)*z(126,j)) = KSUM;
[ULR13] @SUM(valset(j): (j+KOFF)*z(70,j)) + @SUM(valset(j): (j+KOFF)*z(82,j)) + @SUM(valset(j): (j+KOFF)*z(93,j)) + @SUM(valset(j): (j+KOFF)*z(103,j)) + @SUM(valset(j): (j+KOFF)*z(112,j)) + @SUM(valset(j): (j+KOFF)*z(120,j)) + @SUM(valset(j): (j+KOFF)*z(127,j)) = KSUM;
END
!Hex grid:
! Honeycomb structure for order N=7;
!               1   2   3   4   5   6   7 
!             8   9  10  11  12  13  14  15 
!          16  17  18  19  20  21  22  23  24 
!        25  26  27  28  29  30  31  32  33  34 
!      35  36  37  38  39  40  41  42  43  44  45 
!    46  47  48  49  50  51  52  53  54  55  56  57 
!  58  59  60  61  62  63  64  65  66  67  68  69  70 
!    71  72  73  74  75  76  77  78  79  80  81  82 
!      83  84  85  86  87  88  89  90  91  92  93 
!        94  95  96  97  98  99 100 101 102 103 
!         104 105 106 107 108 109 110 111 112 
!           113 114 115 116 117 118 119 120 
!             121 122 123 124 125 126 127 
!;
! ||||||||||||||||||||;
!Rotated original hex grid 60 degrees:
! Honeycomb structure for order N=7;
!              58  46  35  25  16   8   1 
!            71  59  47  36  26  17   9   2 
!          83  72  60  48  37  27  18  10   3 
!        94  84  73  61  49  38  28  19  11   4 
!     104  95  85  74  62  50  39  29  20  12   5 
!   113 105  96  86  75  63  51  40  30  21  13   6 
! 121 114 106  97  87  76  64  52  41  31  22  14   7 
!   122 115 107  98  88  77  65  53  42  32  23  15 
!     123 116 108  99  89  78  66  54  43  33  24 
!       124 117 109 100  90  79  67  55  44  34 
!         125 118 110 101  91  80  68  56  45 
!           126 119 111 102  92  81  69  57 
!             127 120 112 103  93  82  70 
!;
! ////////////////////;
!Rotated original hex grid 120 degrees:
! Honeycomb structure for order N=7;
!             121 113 104  94  83  71  58 
!           122 114 105  95  84  72  59  46 
!         123 115 106  96  85  73  60  47  35 
!       124 116 107  97  86  74  61  48  36  25 
!     125 117 108  98  87  75  62  49  37  26  16 
!   126 118 109  99  88  76  63  50  38  27  17   8 
! 127 119 110 100  89  77  64  51  39  28  18   9   1 
!   120 111 101  90  78  65  52  40  29  19  10   2 
!     112 102  91  79  66  53  41  30  20  11   3 
!       103  92  80  67  54  42  31  21  12   4 
!          93  81  68  55  43  32  22  13   5 
!            82  69  56  44  33  23  14   6 
!              70  57  45  34  24  15   7 
!;
! --------------------;
!Rotated original hex grid 180 degrees:
! Honeycomb structure for order N=7;
!             127 126 125 124 123 122 121 
!           120 119 118 117 116 115 114 113 
!         112 111 110 109 108 107 106 105 104 
!       103 102 101 100  99  98  97  96  95  94 
!      93  92  91  90  89  88  87  86  85  84  83 
!    82  81  80  79  78  77  76  75  74  73  72  71 
!  70  69  68  67  66  65  64  63  62  61  60  59  58 
!    57  56  55  54  53  52  51  50  49  48  47  46 
!      45  44  43  42  41  40  39  38  37  36  35 
!        34  33  32  31  30  29  28  27  26  25 
!          24  23  22  21  20  19  18  17  16 
!            15  14  13  12  11  10   9   8 
!               7   6   5   4   3   2   1 
!;
! \\\\\\\\\\\\\\\\\\\\;
!Rotated original hex grid 240 degrees:
! Honeycomb structure for order N=7;
!              70  82  93 103 112 120 127 
!            57  69  81  92 102 111 119 126 
!          45  56  68  80  91 101 110 118 125 
!        34  44  55  67  79  90 100 109 117 124 
!      24  33  43  54  66  78  89  99 108 116 123 
!    15  23  32  42  53  65  77  88  98 107 115 122 
!   7  14  22  31  41  52  64  76  87  97 106 114 121 
!     6  13  21  30  40  51  63  75  86  96 105 113 
!       5  12  20  29  39  50  62  74  85  95 104 
!         4  11  19  28  38  49  61  73  84  94 
!           3  10  18  27  37  48  60  72  83 
!             2   9  17  26  36  47  59  71 
!               1   8  16  25  35  46  58 
!;
! ||||||||||||||||||||;
!Rotated original hex grid 300 degrees:
! Honeycomb structure for order N=7;
!               7  15  24  34  45  57  70 
!             6  14  23  33  44  56  69  82 
!           5  13  22  32  43  55  68  81  93 
!         4  12  21  31  42  54  67  80  92 103 
!       3  11  20  30  41  53  66  79  91 102 112 
!     2  10  19  29  40  52  65  78  90 101 111 120 
!   1   9  18  28  39  51  64  77  89 100 110 119 127 
!     8  17  27  38  50  63  76  88  99 109 118 126 
!      16  26  37  49  62  75  87  98 108 117 125 
!        25  36  48  61  74  86  97 107 116 124 
!          35  47  60  73  85  96 106 115 123 
!            46  59  72  84  95 105 114 122 
!              58  71  83  94 104 113 121 
!;
! --------------------;
!Rotated original hex grid 360 degrees:
! Honeycomb structure for order N=7;
!               1   2   3   4   5   6   7 
!             8   9  10  11  12  13  14  15 
!          16  17  18  19  20  21  22  23  24 
!        25  26  27  28  29  30  31  32  33  34 
!      35  36  37  38  39  40  41  42  43  44  45 
!    46  47  48  49  50  51  52  53  54  55  56  57 
!  58  59  60  61  62  63  64  65  66  67  68  69  70 
!    71  72  73  74  75  76  77  78  79  80  81  82 
!      83  84  85  86  87  88  89  90  91  92  93 
!        94  95  96  97  98  99 100 101 102 103 
!         104 105 106 107 108 109 110 111 112 
!           113 114 115 116 117 118 119 120 
!             121 122 123 124 125 126 127 
!;
!Flipped across horizontal axis:
! Honeycomb structure for order N=7;
!             121 122 123 124 125 126 127 
!           113 114 115 116 117 118 119 120 
!         104 105 106 107 108 109 110 111 112 
!        94  95  96  97  98  99 100 101 102 103 
!      83  84  85  86  87  88  89  90  91  92  93 
!    71  72  73  74  75  76  77  78  79  80  81  82 
!  58  59  60  61  62  63  64  65  66  67  68  69  70 
!    46  47  48  49  50  51  52  53  54  55  56  57 
!      35  36  37  38  39  40  41  42  43  44  45 
!        25  26  27  28  29  30  31  32  33  34 
!          16  17  18  19  20  21  22  23  24 
!             8   9  10  11  12  13  14  15 
!               1   2   3   4   5   6   7 
!;
!Flipped across LLR diagonal:
! Honeycomb structure for order N=7;
!             127 120 112 103  93  82  70 
!           126 119 111 102  92  81  69  57 
!         125 118 110 101  91  80  68  56  45 
!       124 117 109 100  90  79  67  55  44  34 
!     123 116 108  99  89  78  66  54  43  33  24 
!   122 115 107  98  88  77  65  53  42  32  23  15 
! 121 114 106  97  87  76  64  52  41  31  22  14   7 
!   113 105  96  86  75  63  51  40  30  21  13   6 
!     104  95  85  74  62  50  39  29  20  12   5 
!        94  84  73  61  49  38  28  19  11   4 
!          83  72  60  48  37  27  18  10   3 
!            71  59  47  36  26  17   9   2 
!              58  46  35  25  16   8   1 
!;
!Flipped accros ULR diagonal:
! Honeycomb structure for order N=7;
!              70  57  45  34  24  15   7 
!            82  69  56  44  33  23  14   6 
!          93  81  68  55  43  32  22  13   5 
!       103  92  80  67  54  42  31  21  12   4 
!     112 102  91  79  66  53  41  30  20  11   3 
!   120 111 101  90  78  65  52  40  29  19  10   2 
! 127 119 110 100  89  77  64  51  39  28  18   9   1 
!   126 118 109  99  88  76  63  50  38  27  17   8 
!     125 117 108  98  87  75  62  49  37  26  16 
!       124 116 107  97  86  74  61  48  36  25 
!         123 115 106  96  85  73  60  47  35 
!           122 114 105  95  84  72  59  46 
!             121 113 104  94  83  71  58 
!;
!Symmetry breaking constraints:
! - Break N deg rotational symmetry, N=60, 120, 180, 240, 300
! - Break horizontal symmetry
! - Break LLR diagonal symmetry
! - Break ULR diagonal symmetry
;
!	@FOR(cell(i):
!		@FOR(cell(j) | i,j share the same position in any symmetric hexagon:
!			valasg(i) <> valasg(j) for all symmetry groups..
!		);
